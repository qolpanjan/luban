<?php

namespace app\lib\exception;

use Exception;
use think\exception\Handle;
use think\Log;
use think\Request;

class ExceptionHandler extends Handle
{
    private $code;
    private $msg;
    private $errCode;
    // 返回客户端当前请求的url路径


    public function render(Exception $e)
    {
        if ($e instanceof BaseException) {
            // 如果是自定义异常，需要传给客户端
            $this->code = $e->code;
            $this->msg = $e->mgs;
            $this->errCode = $e->errCode;
        }else{
            // 系统是异常
            // 开发模式下抛出默认异常页面，错误信息比较详细，方便调试
            if(config('app_debug')){
                return parent::render($e);
            }
            // 非开发模式，抛出自定义异常给客户端
            $this->code = 500;
            $this->msg = '服务器内部错误，请联系开发人员';
            $this->errCode = 999;
            // 同时将异常情况记录到日志
            $this->recordErrorLog($e);
        }
        $request = Request::instance();

        $result = [
            'msg' => $this->msg,
            'error_code' => $this->errCode,
            'request_url' => $request->url()
        ];
        return json($result, $this->code); // TODO: Change the autogenerated stub
    }

    private function recordErrorLog(Exception $e) {
        Log::init([
            'type' => 'File',
            'path' => LOG_PATH,
            'level' => ['error']
        ]);
        Log::record($e->getMessage(), 'error');
    }
}